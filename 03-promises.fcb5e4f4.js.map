{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAAUC,EAAcC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACDH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEpBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE3BA,EAAM,G,CAXFQ,SAASC,cAAc,SAe/BC,iBAAiB,UAAWC,IAC/BA,EAAEC,iBACF,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cACAC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAClC,IAAI,IAAIG,EAAW,EAAGA,GAAUD,EAAaC,GAAY,EAAE,CAEzDzB,EAAcyB,EADAL,EAAaG,GAAYE,EAAU,IAEhDC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,QAAQC,IAAI,uBAAqB3B,QAAiBC,OAClD2B,EAAA/B,GAASgC,OAAOC,QAAQ,UAAU,IAEnCC,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClByB,QAAQC,IAAI,sBAAoB3B,QAAeC,OAC/C2B,EAAA/B,GAASgC,OAAOG,QAAQ,UAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = document.querySelector('.form')\n\nfunction  createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n          if (shouldResolve) {\n            resolve({position, delay})\n          } else {\n           reject({position, delay})\n          }\n      }, delay)    \n  })\n};\n\nrefs.addEventListener(\"submit\", (e)=> {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount},\n  } = e.currentTarget;\n  const firstDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const amountValue = Number(amount.value);\n  for(let position = 1; position<=amountValue; position += 1){\n    const delay = firstDelay + delayStep *(position -1);\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success('Success');\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure('Failure');\n    });\n  }\n});\n\n \n "],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay2","step","amount","currentTarget","firstDelay","Number","value","delayStep","amountValue","position1","then","console","log","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.fcb5e4f4.js.map"}